version: '3.5'

services:
    broker:
        command: confluent broker
        container_name: broker
        depends_on:
            - zookeeper
        dns: 10.3.1.4
        dns_search:
            - ubuntu.home
            - home
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            JAVA_HOME: /usr/lib/jvm/java-11-openjdk
            KAFKA_HEAP_OPTS: "-Xmx1G -Xms1G"
            KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=${BROKER_JMX_PORT:?} -Dcom.sun.management.jmxremote.port=${BROKER_JMX_PORT:?} -Djmx.rmi.registry.port=${BROKER_JMX_PORT:?} -Djmx.rmi.port=${BROKER_JMX_PORT:?} -Djava.rmi.server.hostname=${HOST_IP} -Djava.net.preferIPv4Stack=true -Dzookeeper.sasl.client=ZkClient"
            JMX_PORT: ${BROKER_JMX_PORT:?}
            EXTRA_ARGS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.16.1.jar=${BROKER_EXPORT:?}:/usr/share/jmx-exporter/kafka_broker.yml 
            KAFKA_ADVERTISED_HOST_NAME: ${HOST_IP:?}
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${HOST_IP:?}:9092
#            KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://${HOST_IP:?}:9092
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
            KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS:?}
            KAFKA_BROKER_ID: ${KAFKA_CLUSTER_ID:?}
            KAFKA_COMPRESSION_TYPE: gzip
            KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: 'true'
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#            KAFKA_LISTENERS: SASL_PLAINTEXT://0.0.0.0:9092
            KAFKA_NUM_PARTITIONS: 1
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
            KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_ZOOKEEPER_CONNECT: ${ZOOKEEPER_HOSTS:?}
            ZOOKEEPER_TIMEOUT: 6000
        hostname: broker.s8.home
        image: ${DOCKER_REGISTRY:-s2.ubuntu.home:5000/}${CONTAINER_OS:-alpine}/confluent/${CONFLUENT_VERSION:-7.1.1}:${CONTAINER_TAG:-5bce7f429d08bf7ed86efee35b3ab2aca594b04fc5b60be3a1f4f0a32152e111}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        links:
           - zookeeper
        networks:
            - kafka-net
        ports:
            - "${BROKER_EXPORT:?}:${BROKER_EXPORT:?}"
            - "${BROKER_JMX_PORT:?}:${BROKER_JMX_PORT:?}"
            - "9092:9092"
        restart: unless-stopped
        volumes:
            - "./jmx-exporter/:/usr/share/jmx-exporter" 
            - ./broker/data:/usr/local/confluent/data
            - ./broker/logs:/usr/local/confluent/logs
            - ./broker/log:/var/log

    kafka-lag-exporter:
        container_name: kafka-lag-exporter
        dns: 10.3.1.4
        dns_search:
            - ubuntu.home
            - home
        hostname: kafka-lag-exporter.s8.home
        image: ${DOCKER_REGISTRY:-s2.ubuntu.home:5000/}thirdparty/kafka-lag-exporter:${KAFKA_LAG_EXPORTER_TAG:-0.6.7}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        networks:
            - kafka-net
        ports:
            - "${KAFKA_LAG_PORT:?}:${KAFKA_LAG_PORT:?}"
        restart: always
        volumes:
          - "./kafka-lag-exporter/config:/opt/docker/conf"
          - "./kafka-lag-exporter/secrets:/etc/kafka/secrets"


    zookeeper:
        command: confluent zookeeper
        container_name: zookeeper
        dns: 10.3.1.4
        dns_search:
            - ubuntu.home
            - home
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            JAVA_HOME: /usr/lib/jvm/java-11-openjdk
            KAFKA_HEAP_OPTS: "-Xmx1G -Xms1G"
            KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=${ZOOKEEPER_JMX_PORT:?} -Dcom.sun.management.jmxremote.port=${ZOOKEEPER_JMX_PORT:?} -Djmx.rmi.registry.port=${ZOOKEEPER_JMX_PORT:?} -Djmx.rmi.port=${ZOOKEEPER_JMX_PORT:?} -Djava.rmi.server.hostname=${HOST_IP} -Djava.net.preferIPv4Stack=true -Dzookeeper.sasl.client=ZkClient"
            JMX_PORT: ${ZOOKEEPER_JMX_PORT:?}
            EXTRA_ARGS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.16.1.jar=${ZOOKEEPER_EXPORT:?}:/usr/share/jmx-exporter/kafka_broker.yml 
            ZOOKEEPER_SERVER_ID: ${KAFKA_CLUSTER_ID:?}
            ZOOKEEPER_CLIENTPORT: 2181
            ZOOKEEPER_TICKTIME: 2000
            ZOOKEEPER_INITLIMIT: 10
            ZOOKEEPER_SYNCLIMIT: 5
            ZOOKEEPER_SERVER.1: s3.ubuntu.home:2888:3888
            ZOOKEEPER_SERVER.2: s7.ubuntu.home:2888:3888
            ZOOKEEPER_SERVER.3: 0.0.0.0:2888:3888
        hostname: zookeeper.s4.home
        image: ${DOCKER_REGISTRY:-s2.ubuntu.home:5000/}${CONTAINER_OS:-alpine}/confluent/${CONFLUENT_VERSION:-7.1.1}:${CONTAINER_TAG:-5bce7f429d08bf7ed86efee35b3ab2aca594b04fc5b60be3a1f4f0a32152e111}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        networks:
            - kafka-net
        ports:
            - "2181:2181"
            - "2888:2888"
            - "3888:3888"
            - "${ZOOKEEPER_EXPORT:?}:${ZOOKEEPER_EXPORT:?}"
            - "${ZOOKEEPER_JMX_PORT:?}:${ZOOKEEPER_JMX_PORT:?}"
        restart: unless-stopped
        volumes:
            - "./jmx-exporter/:/usr/share/jmx-exporter" 
            - ./zookeeper/data:/usr/local/confluent/data
            - ./zookeeper/logs:/usr/local/confluent/logs 
            - ./zookeeper/log:/var/log
networks:
   kafka-net:
       name: kafka-container-net
